/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.sistematransaccional.GUI;
import com.sistematransaccional.Logica.*;
import java.text.MessageFormat;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author oscar
 */
public class Amortizacion extends javax.swing.JFrame {

    /**
     * Creates new form Amortizacion
     */
    DefaultTableModel tm = new DefaultTableModel();
    private Prestamo p3 ;
    private double interes;
    private double capital;
    private double saldoTotal;
    private double MontoEstatico;
    private static double INTERES_MENSUAL;
    private static final double INTERES_NOMINAL = (11.03) / (12 * 100); // 11.03% nominal anual
    private static final double INTERES_ANUAL = (11.61) / (12 * 100); // 11.61% anual
    private double InteresFinal;

    public double getInteresFinal() {
        return InteresFinal;
    }

    public void setInteresFinal(double InteresFinal) {
        this.InteresFinal = InteresFinal;
    }

    public static double getINTERES_MENSUAL() {
        return INTERES_MENSUAL;
    }

    public static void setINTERES_MENSUAL(double INTERES_MENSUAL) {
        Amortizacion.INTERES_MENSUAL = INTERES_MENSUAL;
    }

    public double getMontoEstatico() {
        return MontoEstatico;
    }

    public void setMontoEstatico(double MontoEstatico) {
        this.MontoEstatico = MontoEstatico;
    }

    public double getInteres() {
        return interes;
    }

    public void setInteres(double interes) {
        this.interes = interes;
    }

    public double getCapital() {
        return capital;
    }

    public void setCapital(double capital) {
        this.capital = capital;
    }

    public double getSaldoTotal() {
        return saldoTotal;
    }

    public void setSaldoTotal(double saldoTotal) {
        this.saldoTotal = saldoTotal;
    }

    public Amortizacion() {
        initComponents();
        p3 = new Prestamo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMonto = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtInteres = new javax.swing.JTextField();
        txtPlazo = new javax.swing.JTextField();
        txtPrima = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPasswordField1 = new javax.swing.JPasswordField();
        txtP = new javax.swing.JTextField();
        lbl1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 102));

        txtMonto.setBackground(new java.awt.Color(204, 204, 204));
        txtMonto.setText("10000");
        txtMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMontoActionPerformed(evt);
            }
        });

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(102, 204, 255));
        jTable1.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.Cuota", "Capital", "Interes", "Saldo de Capital", "Seguro de Desgravamen", "Seguro Incendios", "Valor total de cuota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Monto");

        jLabel2.setText("Tasa de Interes Anual");

        jLabel3.setText("Plazo en Meses");

        jLabel4.setText("Sistema de Amortizacion");

        jLabel5.setText("Prima Anual");

        txtInteres.setText("18");

        txtPlazo.setText("12");
        txtPlazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlazoActionPerformed(evt);
            }
        });

        txtPrima.setText("0.72");

        jButton1.setText("Borrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Frances" }));

        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jButton2.setText("Descargar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(btnCalcular))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPrima, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(52, 52, 52)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(txtP, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtInteres, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPlazo)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(84, 84, 84))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(53, 53, 53)
                            .addComponent(txtPrima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(3, 3, 3)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtPlazo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(txtP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnCalcular)
                                        .addComponent(jButton1)
                                        .addComponent(jButton2))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        tm.setRowCount(0);
        String ids[] = {"NoCuotas", "Saldo Final", "Capital Fija","Intereses", " Valor de cuota","Seguro de Incendios", "Seguro de desgravamen"};
        tm.setColumnIdentifiers(ids);
        
        MontoEstatico = Double.parseDouble(txtMonto.getText());
        setMontoEstatico(MontoEstatico);
        setSaldoTotal(Double.parseDouble(txtMonto.getText()));
        double plazo = Double.parseDouble(txtPlazo.getText());
        PrestamoUno p1 = new PrestamoUno(MontoEstatico, plazo);
        PrestamoDos p2  =  new PrestamoDos(5000, 36);
        for (int i = 1; i <= 36; i++) {
            tm.addRow(new Object[]{
                i,
               
                String.format("%.3f",p2.calcularSaldoFinal()),
               
                String.format("%.3f",p2.capitalFija()),
                String.format("%.3f",p2.calcularInteres()),
                String.format("%.3f",p2.calcularCuota()),
                String.format("%.3f",p2.calcularSeguroIncendios()),
                String.format("%.3f",p2.calcularSeguroDesgravamen()),
                
                /*
                String.format("%.3f", p1.calcularAmortizacionPeriodo()),
                String.format("%.3f", p1.calcularInteresPeriodo()),
                String.format("%.3f", p1.calcularNuevoSaldo()),
                String.format("%.3f", p1.calcularSeguroDesgravamen()),
                String.format("%.3f", p1.calcularSeguroIncendios()),
                String.format("%.3f", p1.calcularCuotaFija())
                */
            });
        }

        jTable1.setModel(tm);
        double Interes = sumarColumna(jTable1, 2);
        double seguroDesgravamen = sumarColumna(jTable1, 4);
        double capital1  = sumarColumna(jTable1, 1);
        System.out.println("Capital "+ capital1/1000);
        System.out.println("La suma de la columna 2 es: " + (Interes)/1000);
        System.out.println("El interes " + (seguroDesgravamen)/1000);
        double total1= Interes +seguroDesgravamen+ capital1;
        System.out.println(" total " + total1/1000);
        
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tm.removeRow(jTable1.getSelectedRow());


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPlazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlazoActionPerformed

    }//GEN-LAST:event_txtPlazoActionPerformed

    private void txtMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMontoActionPerformed

    }//GEN-LAST:event_txtMontoActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        MessageFormat m1 = new MessageFormat("Tabla De Amortizacion");
       
        MessageFormat m2 = new MessageFormat(" 1");
        try {
            PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
            set.add(OrientationRequested.LANDSCAPE);
            jTable1.print(JTable.PrintMode.FIT_WIDTH, m1,m2, true,set ,true);
            JOptionPane.showMessageDialog(null,"Pritned");
        } catch (java.awt.print.PrinterException e) {
            JOptionPane.showMessageDialog(null, "Error");
        }      
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Esta funcion va a calcular la cuota fija a pagar cada mes ;
     *
     * @return retorna la cuota fija a pagar cada mes la cual sera cosntante
     */
    private double calcularCuotaFija() {
        double monto = Double.parseDouble(txtMonto.getText()); //Conviereto el monto de entra a double
        double interesMensual = calcularInteresMensual(); // Asigno el interes mensual
        setINTERES_MENSUAL(interesMensual);
        double meses = Double.parseDouble(txtPlazo.getText());

        double cuotaFija = ((monto * INTERES_ANUAL) / (1 - Math.pow(1 + INTERES_ANUAL, -meses))) + calcularSeguroIncendios();
        return cuotaFija;
    }

    /**
     * Este metodo va transformar el numero de interes Anual a Mensual ,
     * dividiendo primero el numerp / 100 y luego entre 12 para transformar a
     * interes anual
     *
     * @return va a retornar el interes mensual
     */
    private double calcularDesgravamen() {

        return getSaldoTotal() * 0.000572;
    }

    /**
     * Esta funcion va calculcular el interes mensual, la entrada es un interes
     * anual por lo que se divide primero entre 100 y luego entre 12 (12 meses)
     * .
     *
     * @return retorna el interes mensual
     */
    private double calcularInteresMensual() {

        return ((Double.parseDouble(txtInteres.getText()) / 100)) / 12;
    }

    /**
     * Esta funcion va calcular una parte de la formula de cuota FIja (revissar
     * formula), para no repetir codigo
     *
     * @param interes; el interes necesario
     * @param meses; los meses necesarios
     * @return retorna el calculo de la parte repetida de codigo en la formula
     */

    /**
     * Este metodo va a calcular la capital (cuotafija - interes) , usa 2
     * metodos ya definidos para que sea dinamico
     *
     * @return retorna la capital de cada mes
     */
    private double calcularMonto() {

        return calcularCuotaFija() - calcularInteres() - calcularDesgravamen() - calcularSeguroIncendios();
    }

    /**
     * Este metodo va a calcular el interes de cada mes (saldo total
     * *interesMensual);
     *
     * @return
     */
    private double calcularInteres() {

        return getSaldoTotal() * INTERES_NOMINAL;
    }

    /**
     * Este metodo va a calcular el saldo total anterior ;
     *
     * @return
     */
    private double calcularSaltoTotal() {
        double saltoTotal = getSaldoTotal() - calcularMonto(); //Obtiene el primer saldo total (10000) y lo resta al monto  (capital)
        setSaldoTotal(saltoTotal); // seteo el salto total nuevo , para cambiar su valor y poder calcular cada mes 
        if (saltoTotal < 0) { // una vez el saldo total sea negativo se vuelve cero si es necesario 
            setSaldoTotal(0);
            return 0;
        }
        return saltoTotal;
    }

    private double calcularSeguroIncendios() {
        return getMontoEstatico() * 0.00026;
    }
     
    
  private  double sumarColumna(JTable table, int columnIndex) {
    int total = 0;
    DefaultTableModel model = (DefaultTableModel) table.getModel();

    for (int i = 0; i < model.getRowCount(); i++) {
        try {
            // Obtener el valor de la celda, eliminar comas y convertir a número
            String valor = model.getValueAt(i, columnIndex).toString().replace(",", "");
            total += Double.parseDouble(valor);
        } catch (NumberFormatException e) {
            System.out.println("Error al convertir fila " + i + ": " + e.getMessage());
        }
    }
    return total;
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Amortizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Amortizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Amortizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Amortizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Amortizacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JTextField txtInteres;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtP;
    private javax.swing.JTextField txtPlazo;
    private javax.swing.JTextField txtPrima;
    // End of variables declaration//GEN-END:variables
}
